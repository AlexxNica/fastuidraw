/* variables that are initialized at main(), but user defined
   fragment shader can change.
 */
vec2 fastuidraw_brush_position;

uint
fastuidraw_read_header(in uint location, out fastuidraw_shader_header h);


/* needed functions
 */
vec4
fastuidraw_run_frag_shader(in uint frag_shader, in uint frag_shader_data_location);

vec4
fastuidraw_compute_brush_color(void);


#ifdef FASTUIDRAW_PAINTER_BLEND_DUAL_SRC_BLEND
void
fastuidraw_run_blend_shader(in uint blend_shader, in uint blend_shader_data_location, in vec4 color0, out vec4 src0, out vec4 src1);
#endif

#ifdef FASTUIDRAW_PAINTER_BLEND_FRAMEBUFFER_FETCH
void
fastuidraw_run_blend_shader(in uint blend_shader, in uint blend_shader_data_location, in vec4 in_src, in vec4 in_fb, out vec4 out_src);
#endif

#ifdef FASTUIDRAW_PAINTER_BLEND_SINGLE_SRC_BLEND
void
fastuidraw_run_blend_shader(in uint blend_shader, in uint blend_shader_data_location, in vec4 in_src, out vec4 out_src);
#endif

void
fastuidraw_compute_image_atlas_coord(in vec2 image_shader_coord,
                                     in int index_layer,
                                     in int num_lookups,
                                     in int slack,
                                     out vec2 image_atlas_coord,
                                     out int image_atlas_layer);

uint
fastuidraw_read_dashed_stroking_params_header(in uint location, out fastuidraw_dashed_stroking_params_header p);
