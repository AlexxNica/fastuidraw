void
fastuidraw_gl_brush_main(in uint sub_shader,
                         inout uint shader_data_offset,
                         inout vec2 brush_location,
                         inout vec4 color)
{
  fastuidraw_linear_gradient linear_gradient;
  vec2 v, d;
  float t;

  shader_data_offset = fastuidraw_read_linear_gradient(shader_data_offset, linear_gradient);

  v = linear_gradient.end_pt - linear_gradient.start_pt;
  d = brush_location - linear_gradient.start_pt;
  t = dot(v, d) / dot(v, v);
  if((linear_gradient.flags & uint(fastuidraw_linear_gradient_repeat_mask)) != 0u)
    {
      t = fract(t);
    }
  t = linear_gradient.color_stop_sequence_xy.x + t * linear_gradient.color_stop_sequence_width;
  color *= fastuidraw_colorStopFetch(t, linear_gradient.color_stop_sequence_xy.y);
}
